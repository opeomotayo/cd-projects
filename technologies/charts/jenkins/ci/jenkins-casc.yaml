jenkins:
#   systemMessage: "This Jenkins is configured by single JCasC plugin"
#   numExecutors: 1
#   nodes:
#     - permanent:
#         labelString: "linux jenkins test"
#         mode: NORMAL
#         name: "utility-node"
#         remoteFS: "/home/user"
#         launcher:
#           jnlp:
#             workDirSettings:
#               disabled: true
#               failIfWorkDirIsMissing: false
#               internalDir: "remoting"
#               workDirPath: "/tmp"
 
#   securityRealm:
#     ldap:
#       configurations:
#         - server: ldap.acme.com
#           rootDN: dc=acme,dc=fr
#           managerDN: "manager"
#           managerPasswordSecret: "${LDAP_PASSWORD}"
#           userSearch: "(&(objectCategory=User)(sAMAccountName={0}))"
#       cache:
#         size: 100
#         ttl: 10
#       userIdStrategy: CaseInsensitive
#       groupIdStrategy: CaseSensitive
 
#   authorizationStrategy:
#     globalMatrix:
#       grantedPermissions:
#         - "Overall/Read:anonymous"
       
 
# credentials:
#   system:
#     domainCredentials:
#       - credentials:
#           - string:
#               scope: GLOBAL
#               id: slack-token
#               secret: "${SLACK_TOKEN}"
#               description: Slack token
  
 
# unclassified:
#   location:
#     adminAddress: "jenkins@example.com"
#     url: "http://jenkins.example.com/"
#   slackNotifier:
#     teamDomain: <your-slack-workspace-name>
#     tokenCredentialId: slack-token
 
# tool:
#   git:
#     installations:
#       - name: git
#         home: /usr/local/bin/git
 
jobs:
  - scripts: >
      folder('jobs') {
        scm {
          git {
            extensions {
              wipeOutWorkspace()
            }
            remote {
              url('')
              # credentials('')
            }
            branch('main')
          }
        }
        triggers {
          scm('H/15 * * * *')
        }
        steps {
          jobDsl {
            targets('jobs/**/*.groovy')
            # additionalClasspath('src/main/groovy')
            # removedJobAction('DELETE')
            # removedViewAction('DELETE')
            # lookupStrategy('')
          }
        }
      }

# groovy:
#   - script: |
#   import org.jenkins
 
# credentials:
#   system:
#     domainCredentials:
#       - credentials:
#           - basicSSHUserPrivateKey:
#               scope: GLOBAL
#               id: ssh_key_with_passphrase
#               username: ${SSH_USERNAME}
#               passphrase: ${SSH_KEY_PASSWORD}
#               description: "SSH passphrase with private key file"
#               privateKeySource:
#                 directEntry:
#                   privateKey: ${SSH_PRIVATE_KEY}