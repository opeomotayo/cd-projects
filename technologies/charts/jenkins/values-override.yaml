# agent:
#   resources:
#     requests:
#       cpu: "256m"
#       memory: "256Mi"
#     limits:
#       cpu: "512m"
#       memory: "512Mi"    

controller:
  jenkinsUrl: "https://jenkins.opeomotayo.net"
  image: "jenkins/jenkins"
  tag: "2.389-jdk11"

  # resources:
  #   requests:
  #     cpu: "25m"
  #     memory: "128Mi"
  #   limits:
  #     cpu: "2000m"
  #     memory: "4096Mi"

  # sidecars:
  #   configAutoReload:
  #     resources:
  #       limits:
  #         cpu: 100m
  #         memory: 100Mi
  #       requests:
  #         cpu: 25m
  #         memory: 25Mi
  
  installPlugins:
    - configuration-as-code
    - git
    - kubernetes
    - workflow-aggregator

  additionalPlugins:
    - blueocean
    - credentials-binding
    - github-oauth
    - job-dsl
    - kubernetes-credentials-provider
    - ldap
    - nexus-artifact-uploader
    - matrix-auth
    - role-strategy
    # - slack
    - sonar

  persistence:
    size: "4Gi"

  tool:
    git:
      installations:
      - home: "/usr/bin/git"
        name: "git"
    jdk:
      installations:
      - name: "jdk"
    sonarRunnerInstallation:
      installations:
      - name: "sonarqube"
        properties:
        - installSource:
            installers:
            - sonarRunnerInstaller:
                id: "4.8.0.2856" 
  
  # url('https://github.com/opeomotayo/cd-projects.git')
  # credentials('ssh-key-jenkins-github-devops')
  JCasC:
    enabled: true
    defaultConfig: false
    configScripts:
      welcome-message: |
        jenkins:
          systemMessage: |
            Welcome to my build server.

            This Jenkins is 100% configured and managed 'as code'.
            Config is now mostly handled by the 'Jenkins Configuration as Code' (JCasC) plugin.

      authentication-authorization: |
        jenkins:
          adminSecret: true
          securityRealm:
            github:
              clientID: "{YmM3YTc0N2M5MjcxM2QzYzZmOWQ=}"
              clientSecret: "{AQAAABAAAAAw0u3FyKPTvWbLHXfyqYrYXn8epezYtzj/QkS6OIKJUTO70X6PdG7Ao6abwd6Ii6git8JtDsp9po70kK1aGbOjIg==}"
              githubApiUri: "https://api.github.com"
              githubWebUri: "https://github.com"
              oauthScopes: "read:org,user:email,repo"
          authorizationStrategy:
            projectMatrix:
              permissions:
              - "GROUP:Overall/Administer:authenticated" 

      pipelines-jobs: |
        jobs:
          - script: >
              multibranchPipelineJob('multibranch-pipeline-job') {
                branchSources {
                  git {
                    id('123456789') // IMPORTANT: use a constant and unique identifier
                    remote('https://github.com/jenkinsci/job-dsl-plugin.git')
                  }
                }
              } 
          - script: >
              pipelineJob('actions-runner-controller') {
              logRotator {
                  numToKeep(10)
                  daysToKeep(30)
              }
                definition {
                  cpsScm {
                    scm {
                      git {
                        remote {
                          github('opeomotayo/cd-projects')
                        }
                        branches('main')
                      }
                    }   
                    scriptPath('jobs/actions-runner-controller/Jenkinsfile')
                  }  
                }       
              }
          - script: >
              pipelineJob('actions-runner-controller2') {
                logRotator {
                  numToKeep(10)
                  daysToKeep(30)
                }
                definition {
                  cpsScm {
                    scm {
                        git {
                          remote {
                              url('https://github.com/opeomotayo/cd-projects.git')
                          }
                          branches('*')
                        }
                    }
                    scriptPath('jobs/actions-runner-controller/Jenkinsfile')
                  }
                }         
              }   
          - script: >
              pipelineJob('github-demo') {
                definition {
                  cpsScm {
                    scm {
                      git {
                        remote {
                          github('jenkinsci/pipeline-examples')
                        }
                      }
                    }   
                    scriptPath('declarative-examples/simple-examples/environmentInStage.groovy')
                  }  
                }       
              }
      #sidecars:
      #configAutoReload:
      #enabled: true
      #folder: >-
      # https://raw.githubusercontent.com/opeomotayo/cd-projects/main/technologies/charts/jenkins/ci/jenkins-casc.yaml


